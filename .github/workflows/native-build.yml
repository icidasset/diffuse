name: Build Native Version


on:
  workflow_dispatch:
    inputs:


jobs:
  #########
  # BUILD #
  #########
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Nix
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: cachix/cachix-action@v10
        with:
          name: diffuse
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      # Cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/.stack
          key: ${{ runner.os }}-stack

      # Tasks
      - run: nix-shell --run "just install-deps"
      - run: nix-shell --run "just build-prod"

      # Upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/

  ##################
  # CREATE RELEASE #
  ##################
  create-release:
    needs: build
    runs-on: ubuntu-latest

    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}
      TAG_NAME: ${{ steps.package-version.outputs.current-version }}

    steps:
      - uses: actions/checkout@v3
      - run: mkdir compressed

      # Download artifacts
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build/

      # Create zip
      - uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./compressed/diffuse-web.zip ./build

      # Create tar.gz
      - uses: master-atul/tar-action@v1.0.2
        with:
          command: c
          cwd: .
          files: ./build
          outPath: compressed/diffuse-web.tar.gz

      # Get Diffuse's version number
      - id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0

      # Create release
      - uses: softprops/action-gh-release@v1
        id: create_release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

          tag_name: "${{ steps.package-version.outputs.current-version }}"
          name: "v${{ steps.package-version.outputs.current-version }}"
          body: "See the assets to download this version and install."
          draft: true

          files: |
            compressed/diffuse-web.zip
            compressed/diffuse-web.tar.gz

  #########
  # TAURI #
  #########
  tauri:
    needs: create-release

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # OS
      - name: install linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      # Rust
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri -> target"

      # Download artifacts
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build/

      # Install Tauri CLI
      - run: just install-tauri-cli

      # Make a build
      - run: just tauri-build
        if: matrix.os != 'macos-latest'

      - run: just tauri-build-universal
        if: matrix.os == 'macos-latest'

      # Upload artifacts
      - uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

          tag_name: "${{ needs.create-release.outputs.TAG_NAME }}"
          draft: true

          files: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
